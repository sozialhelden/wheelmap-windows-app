<?xml version='1.0' encoding='UTF-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="STATUS_LIMITED" xml:space="preserve">
    <value>部分的に車椅子でのアクセス可能です</value>
  </data>
  <data name="STATUS_LIMITED_HINT_0" xml:space="preserve">
    <value>入り口には高さが最大7cm (3 in) の段差があります。</value>
  </data>
  <data name="STATUS_LIMITED_HINT_1" xml:space="preserve">
    <value>部屋のほとんどに段差がありません。</value>
  </data>
  <data name="STATUS_LIMITED_HINT_COUNT" xml:space="preserve">
    <value>2</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_NO" xml:space="preserve">
    <value>車椅子利用不可</value>
  </data>
  <data name="STATUS_NO_HINT_0" xml:space="preserve">
    <value>入り口に1つないしは複数の段差あり</value>
  </data>
  <data name="STATUS_NO_HINT_1" xml:space="preserve">
    <value>部屋にアクセスすることができません。</value>
  </data>
  <data name="STATUS_NO_HINT_COUNT" xml:space="preserve">
    <value>2</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_TITLE_HINT" xml:space="preserve">
    <value>場所が車椅子で入れるかどうか印をつけてください!</value>
  </data>
  <data name="STATUS_TITLE_WC_HINT" xml:space="preserve">
    <value>トイレが車椅子でアクセスできるか印をつけてください。</value>
  </data>
  <data name="STATUS_TOILET_LIMITED" xml:space="preserve">
    <value>部分的に車椅子でのアクセス可能です</value>
  </data>
  <data name="STATUS_TOILET_NO" xml:space="preserve">
    <value>車椅子で利用不可のトイレ</value>
  </data>
  <data name="STATUS_TOILET_UNKNOWN" xml:space="preserve">
    <value>車椅子での利用可能か不明のトイレ</value>
  </data>
  <data name="STATUS_TOILET_YES" xml:space="preserve">
    <value>車椅子で利用可能のトイレ</value>
  </data>
  <data name="STATUS_UNKNOWN" xml:space="preserve">
    <value>不明なステータス</value>
  </data>
  <data name="STATUS_UNKNOWN_HINT_0" xml:space="preserve">
    <value>場所を作ることで助けてください!</value>
  </data>
  <data name="STATUS_UNKNOWN_HINT_COUNT" xml:space="preserve">
    <value>1</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_WC_LIMITED_HINT_COUNT" xml:space="preserve">
    <value>0</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_WC_NO_HINT_COUNT" xml:space="preserve">
    <value>0</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_WC_UNKNOWN_HINT_0" xml:space="preserve">
    <value>場所に印をつけることで助けてください。</value>
  </data>
  <data name="STATUS_WC_UNKNOWN_HINT_COUNT" xml:space="preserve">
    <value>1</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_WC_YES_HINT_0" xml:space="preserve">
    <value>出入り口の内側の幅が少なくとも90cm (35 in)。</value>
  </data>
  <data name="STATUS_WC_YES_HINT_1" xml:space="preserve">
    <value> 最低でも150 x 150 cm (59 x 59 in) の何も置かれていないスペース。</value>
  </data>
  <data name="STATUS_WC_YES_HINT_2" xml:space="preserve">
    <value>車椅子の高さのトイレ</value>
  </data>
  <data name="STATUS_WC_YES_HINT_3" xml:space="preserve">
    <value>手すりを握る</value>
  </data>
  <data name="STATUS_WC_YES_HINT_4" xml:space="preserve">
    <value>アクセスできる手洗い器</value>
  </data>
  <data name="STATUS_WC_YES_HINT_COUNT" xml:space="preserve">
    <value>5</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
  <data name="STATUS_YES" xml:space="preserve">
    <value>車椅子通行可</value>
  </data>
  <data name="STATUS_YES_HINT_0" xml:space="preserve">
    <value>段差のない入り口</value>
  </data>
  <data name="STATUS_YES_HINT_1" xml:space="preserve">
    <value>全ての部屋は段差無しです。</value>
  </data>
  <data name="STATUS_YES_HINT_COUNT" xml:space="preserve">
    <value>2</value>
    <comment>Indicates how many hints exists for this status (must be a number). Hints must have the format STATUS_{TYPE}_HINT_{NUMBER}</comment>
  </data>
</root>
